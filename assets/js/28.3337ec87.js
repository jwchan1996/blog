(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{411:function(e,s,t){e.exports=t.p+"assets/img/01.da7fa832.png"},497:function(e,s,t){"use strict";t.r(s);var n=t(43),a=Object(n.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"代码拆分"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码拆分"}},[e._v("#")]),e._v(" 代码拆分")]),e._v(" "),n("p",[n("code",[e._v("rollup")]),e._v(" 最新的版本已经支持代码拆分了，可以使用动态导入的方式去实现代码的按需加载，"),n("code",[e._v("rollup")]),e._v(" 的内部也会自动处理代码的拆分，也就是分包。")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/jwchan1996/rollup-play/blob/main/06-code-splitting",target:"_blank",rel:"noopener noreferrer"}},[e._v("示例代码仓库"),n("OutboundLink")],1)]),e._v(" "),n("div",{staticClass:"language-diff extra-class"},[n("pre",{pre:!0,attrs:{class:"language-diff"}},[n("code",[n("span",{pre:!0,attrs:{class:"token unchanged"}},[e._v("  // src/index.js\n")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[e._v("- // // 导入模块成员\n- // import { log } from './logger'\n- // import messages from './messages'\n")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[e._v("- // // 使用模块成员\n- // const msg = messages.hi\n")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[e._v("- // log(msg)\n")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[e._v("+  import('./logger').then(({ log }) => {\n+    log('code splitting~')\n+  })\n")])])])]),n("p",[e._v("需要注意的是，使用动态导入代码拆分的方式引入模块，打包输出的格式就不能是 "),n("code",[e._v("iife")]),e._v("，必须使用 "),n("code",[e._v("amd")]),e._v("、"),n("code",[e._v("cmd")]),e._v(" 等其他标准。这里浏览器环境下，需要输出 "),n("code",[e._v("amd")]),e._v(" 格式的打包结果。而且我们需要输出多个打包文件，配置文件的 "),n("code",[e._v("output")]),e._v(" 属性就不能是 "),n("code",[e._v("file")]),e._v(" 指定文件，需要配置的是 "),n("code",[e._v("dir")]),e._v(" 输出目录。")]),e._v(" "),n("div",{staticClass:"language-diff extra-class"},[n("pre",{pre:!0,attrs:{class:"language-diff"}},[n("code",[n("span",{pre:!0,attrs:{class:"token unchanged"}},[e._v("  // rollup.config.js\n")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token unchanged"}},[e._v("  export default {\n    input: 'src/index.js',\n    output: {\n")]),n("span",{pre:!0,attrs:{class:"token deleted-sign deleted"}},[e._v("-     // file: 'dist/bundle.js',\n-     // format: 'iife'\n")]),n("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[e._v("+     dir: 'dist',\n+     format: 'amd'\n")]),n("span",{pre:!0,attrs:{class:"token unchanged"}},[e._v("    }\n  }\n")])])])]),n("p",[e._v("打包后可以看到分包文件以 "),n("code",[e._v("amd")]),e._v(" 格式导出的。")]),e._v(" "),n("p",[n("img",{attrs:{src:t(411),alt:"02"}})])])}),[],!1,null,null,null);s.default=a.exports}}]);