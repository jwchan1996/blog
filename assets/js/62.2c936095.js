(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{494:function(n,s,e){"use strict";e.r(s);var a=e(43),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"加载-npm-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加载-npm-模块"}},[n._v("#")]),n._v(" 加载 npm 模块")]),n._v(" "),e("p",[e("code",[n._v("rollup")]),n._v(" 默认只能通过文件路径的方式去加载本地文件模块，对于 "),e("code",[n._v("node_modules")]),n._v(" 下的模块 "),e("code",[n._v("rollup")]),n._v(" 并不能像 "),e("code",[n._v("webpack")]),n._v(" 一样能够通过模块名称找到对应的模块。为了抹平这个差异，"),e("code",[n._v("rollup")]),n._v(" 官方提供了 "),e("code",[n._v("rollup-plugin-node-resolve")]),n._v("这个插件，有了这个插件就可以直接在代码中使用模块名称导入对应的模块。")]),n._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/jwchan1996/rollup-play/blob/main/04-npm-module",target:"_blank",rel:"noopener noreferrer"}},[n._v("示例代码仓库"),e("OutboundLink")],1)]),n._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[n._v("yarn")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("add")]),n._v(" rollup-plugin-node-resolve --dev\n")])])]),e("div",{staticClass:"language-diff extra-class"},[e("pre",{pre:!0,attrs:{class:"language-diff"}},[e("code",[e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("  // rollup.config.js\n")]),n._v("\n"),e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("  import json from 'rollup-plugin-json'\n")]),e("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[n._v("+ import resolve from 'rollup-plugin-node-resolve'\n")]),n._v("\n"),e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("  export default {\n    input: 'src/index.js',\n    output: {\n      file: 'dist/bundle.js',\n      format: 'iife'\n    },\n    plugins: [\n      json(),\n")]),e("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[n._v("+     resolve()\n")]),e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("    ]\n  }\n")])])])]),e("div",{staticClass:"language-diff extra-class"},[e("pre",{pre:!0,attrs:{class:"language-diff"}},[e("code",[e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("  // src/index.js\n")]),n._v("\n"),e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("  // 导入模块成员\n")]),e("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[n._v("+ import _ from 'lodash-es'\n")]),e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("  import { log } from './logger'\n  import messages from './messages'\n  import { name, version } from '../package.json'\n")]),n._v("\n"),e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("  // 使用模块成员\n  const msg = messages.hi\n")]),n._v("\n"),e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("  log(msg)\n")]),n._v("\n"),e("span",{pre:!0,attrs:{class:"token unchanged"}},[n._v("  log(name)\n  log(version)\n")]),e("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[n._v("+ log(_.camelCase('hello world'))\n")])])])]),e("p",[n._v("这里使用 "),e("code",[n._v("lodash")]),n._v(" 库的 "),e("code",[n._v("es")]),n._v(" 版本是因为 "),e("code",[n._v("rollup")]),n._v(" 默认只能处理 "),e("code",[n._v("ESM")]),n._v("，如果想要使用 "),e("code",[n._v("loadsh")]),n._v(" 的普通版本，则需要进行另外的处理。")])])}),[],!1,null,null,null);s.default=t.exports}}]);