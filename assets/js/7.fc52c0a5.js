(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{368:function(t,s,a){t.exports=a.p+"assets/img/axios_options_01.d16082b5.png"},369:function(t,s,a){t.exports=a.p+"assets/img/axios_options_02.812f60f2.png"},370:function(t,s,a){t.exports=a.p+"assets/img/axios_options_03.ca717e15.png"},371:function(t,s,a){t.exports=a.p+"assets/img/axios_options_04.5cac01fb.png"},372:function(t,s,a){t.exports=a.p+"assets/img/axios_options_05.04286631.png"},373:function(t,s,a){t.exports=a.p+"assets/img/axios_options_06.45cb0dcb.png"},480:function(t,s,a){"use strict";a.r(s);var e=a(43),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"关于-axios-请求出现-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于-axios-请求出现-options"}},[t._v("#")]),t._v(" 关于 axios 请求出现 OPTIONS")]),t._v(" "),e("h2",{attrs:{id:"为什么-axios-先要先请求-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么-axios-先要先请求-options"}},[t._v("#")]),t._v(" 为什么 axios 先要先请求 OPTIONS")]),t._v(" "),e("p",[t._v("🎨 最近在用 "),e("code",[t._v("vue")]),t._v(" 重写一个以前的 "),e("code",[t._v("angular")]),t._v(" + "),e("code",[t._v("thinkjs")]),t._v(" 的项目，由于项目环境的前后端分离了，就出现了跨域问题，配置了一下 "),e("code",[t._v("CORS")]),t._v(" 解决了跨域问题之后，又出现了 "),e("code",[t._v("axios")]),t._v(" 请求发送两次的情况。")]),t._v(" "),e("p",[t._v("以登录功能为例，一共发送两个请求，第一个是 "),e("code",[t._v("OPTIONS")]),t._v(" 请求，第二个是 "),e("code",[t._v("POST")]),t._v(" 请求。")]),t._v(" "),e("p",[e("code",[t._v("axios")]),t._v(" 配置如下：")]),t._v(" "),e("div",{staticClass:"language-JavaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" axios "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'axios'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" qs "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qs'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" baseURL "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8888'")]),t._v("\n\naxios"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptors"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("method  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" qs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" config\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" request "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" axios"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  baseURL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  headers"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'X-Requested-With'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'XMLHttpRequest'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/x-www-form-urlencoded;charset=UTF-8'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  withCredentials"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 允许携带cookie")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" request\n")])])]),e("p",[t._v("执行功能请求的时候，控制台 "),e("code",[t._v("XHR")]),t._v(" 请求如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(368),alt:"等待options"}})]),t._v(" "),e("p",[t._v("一直处于 "),e("code",[t._v("pending")]),t._v(" 状态，即等待中状态。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(369),alt:"等待options"}})]),t._v(" "),e("p",[e("code",[t._v("thinkjs")]),t._v(" 控制台显示请求时间如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(370),alt:"options请求处理时间"}})]),t._v(" "),e("p",[e("img",{attrs:{src:a(371),alt:"post请求处理时间"}})]),t._v(" "),e("p",[t._v("👎 可以看到，"),e("code",[t._v("OPTIONS")]),t._v(" 请求占用了差不多两分钟的时间之后，才进行 "),e("code",[t._v("POST")]),t._v(" 请求，简直不能忍！！！")]),t._v(" "),e("p",[t._v("所以，问题来了，为什么会出现两次请求呢？这个 "),e("code",[t._v("OPTIONS")]),t._v(" 请求到底是何方神圣？")]),t._v(" "),e("h3",{attrs:{id:"cors-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cors-是什么"}},[t._v("#")]),t._v(" CORS 是什么")]),t._v(" "),e("p",[e("code",[t._v("CORS")]),t._v(" 是一个 "),e("code",[t._v("W3C")]),t._v(' 标准，全称是"跨域资源共享"（Cross-origin resource sharing）。\n它允许浏览器向跨源服务器，发出 '),e("code",[t._v("XMLHttpRequest")]),t._v(" 请求，从而克服了 "),e("code",[t._v("AJAX")]),t._v(" 只能同源使用的限制。")]),t._v(" "),e("h3",{attrs:{id:"cors-的局限性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cors-的局限性"}},[t._v("#")]),t._v(" CORS 的局限性")]),t._v(" "),e("p",[e("code",[t._v("CORS")]),t._v(" 需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE浏览器不能低于 "),e("code",[t._v("IE10")]),t._v("。\n整个 "),e("code",[t._v("CORS")]),t._v(" 通信过程，都是浏览器自动完成，不需要用户参与。\n浏览器一旦发现 "),e("code",[t._v("AJAX")]),t._v(" 请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求。\n实现 "),e("code",[t._v("CORS")]),t._v(" 通信的关键是服务器，只要服务器实现了 "),e("code",[t._v("CORS")]),t._v(" 接口，就可以跨源通信。")]),t._v(" "),e("h3",{attrs:{id:"cors-的类别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cors-的类别"}},[t._v("#")]),t._v(" CORS 的类别")]),t._v(" "),e("ul",[e("li",[t._v("简单请求（simple request）")]),t._v(" "),e("li",[t._v("非简单请求（not-so-simple request）")])]),t._v(" "),e("h3",{attrs:{id:"简单请求（simple-request）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单请求（simple-request）"}},[t._v("#")]),t._v(" 简单请求（simple request）")]),t._v(" "),e("p",[t._v("只要同时满足以下两大条件，就属于简单请求：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("请求方法是以下三种方法之一：\n- HEAD\n- GET\n- POST\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("HTTP 的头信息不超出以下几种字段：\n- Accept\n- Accept-Language\n- Content-Language\n- Last-Event-ID\n- Content-Type: 只限于三个值 application/x-www-form-urlencoded、multipart/form-data、text/plain\n")])])]),e("p",[t._v("🙄 对于简单请求，浏览器直接发出 "),e("code",[t._v("CORS")]),t._v(" 请求。\n具体来说，就是在头信息之中，增加一个 "),e("code",[t._v("Origin")]),t._v(" 字段。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Access-Control-Allow-Origin")]),t._v(": 该字段是必须的。它的值要么是请求时 "),e("code",[t._v("Origin")]),t._v(" 字段的值，要么是一个 "),e("code",[t._v("*")]),t._v(" ，表示接受任意域名的请求。")]),t._v(" "),e("li",[e("code",[t._v("Access-Control-Allow-Credentials")]),t._v(": 该字段可选。它的值是一个布尔值，表示是否允许发送 "),e("code",[t._v("Cookie")]),t._v("。默认情况下，"),e("code",[t._v("Cookie")]),t._v(" 不包括在 "),e("code",[t._v("CORS")]),t._v(" 请求之中。设为 "),e("code",[t._v("true")]),t._v("，即表示服务器明确许可，"),e("code",[t._v("Cookie")]),t._v(" 可以包含在请求中，一起发给服务器。这个值也只能设为 "),e("code",[t._v("true")]),t._v("，如果服务器不要浏览器发送 "),e("code",[t._v("Cookie")]),t._v("，删除该字段即可。")]),t._v(" "),e("li",[e("code",[t._v("Access-Control-Expose-Headers")]),t._v(": 该字段可选。"),e("code",[t._v("CORS")]),t._v(" 请求时，"),e("code",[t._v("XMLHttpRequest")]),t._v(" 对象的 "),e("code",[t._v("getResponseHeader()")]),t._v(" 方法只能拿到 "),e("code",[t._v("6")]),t._v(" 个基本字段："),e("code",[t._v("Cache-Control")]),t._v("、"),e("code",[t._v("Content-Language")]),t._v("、"),e("code",[t._v("Content-Type")]),t._v("、"),e("code",[t._v("Expires")]),t._v("、"),e("code",[t._v("Last-Modified")]),t._v("、"),e("code",[t._v("Pragma")]),t._v("。如果想拿到其他字段，就必须在 "),e("code",[t._v("Access-Control-Expose-Headers")]),t._v(" 里面指定。")])]),t._v(" "),e("h3",{attrs:{id:"非简单请求（not-so-simple-request）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非简单请求（not-so-simple-request）"}},[t._v("#")]),t._v(" 非简单请求（not-so-simple request）")]),t._v(" "),e("p",[t._v("复杂跨域请求要满足以下：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("- 请求方法不是 HEAD/GET/POST\n- POST 请求的 Content-Type 并非 application/x-www-form-urlencoded、multipart/form-data、text/plain\n- 请求设置了自定义的 header 字段\n")])])]),e("ol",[e("li",[t._v("非简单请求是那种对服务器有特殊要求的请求，比如请求方法是 "),e("code",[t._v("PUT")]),t._v(" 或 "),e("code",[t._v("DELETE")]),t._v("，或者 "),e("code",[t._v("Content-Type")]),t._v(" 字段的类型是 "),e("code",[t._v("application/json")]),t._v("。")]),t._v(" "),e("li",[t._v("非简单请求的 "),e("code",[t._v("CORS")]),t._v(" 请求，会在正式通信之前，增加一次 "),e("code",[t._v("HTTP")]),t._v(' 查询请求，称为"预检"请求（preflight）。')]),t._v(" "),e("li",[t._v('"预检"请求用的请求方法是 '),e("code",[t._v("OPTIONS")]),t._v("，表示这个请求是用来询问的。头信息里面，关键字段是 "),e("code",[t._v("Origin")]),t._v("，表示请求来自哪个源。")]),t._v(" "),e("li",[t._v("浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些 "),e("code",[t._v("HTTP")]),t._v(" 动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的 "),e("code",[t._v("XMLHttpRequest")]),t._v(" 请求，否则就报错。")]),t._v(" "),e("li",[t._v("除了 "),e("code",[t._v("Origin")]),t._v(' 字段，"预检"请求的头信息包括两个特殊字段：\n'),e("ul",[e("li",[e("code",[t._v("Access-Control-Request-Method")]),t._v("：该字段是必须的，用来列出浏览器的 "),e("code",[t._v("CORS")]),t._v(" 请求会用到哪些 "),e("code",[t._v("HTTP")]),t._v(" 方法。")]),t._v(" "),e("li",[e("code",[t._v("Access-Control-Request-Headers")]),t._v("：该字段是一个逗号分隔的字符串，指定浏览器 "),e("code",[t._v("CORS")]),t._v(" 请求会额外发送的头信息字段。")])])])]),t._v(" "),e("p",[t._v('一旦服务器通过了"预检"请求，以后每次浏览器正常的 '),e("code",[t._v("CORS")]),t._v(" 请求，就都跟简单请求一样，会有一个 "),e("code",[t._v("Origin")]),t._v(" 头信息字段。服务器的回应，也都会有一个 "),e("code",[t._v("Access-Control-Allow-Origin")]),t._v(" 头信息字段。")]),t._v(" "),e("h2",{attrs:{id:"解决-axios-请求-options-的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决-axios-请求-options-的方法"}},[t._v("#")]),t._v(" 解决 axios 请求 OPTIONS 的方法")]),t._v(" "),e("p",[t._v("😑 就是！把非简单请求转换为简单请求！！！")]),t._v(" "),e("p",[t._v("简单粗暴~")]),t._v(" "),e("p",[e("img",{attrs:{src:a(372),alt:"修改header"}})]),t._v(" "),e("p",[t._v("再次请求接口，发现 "),e("code",[t._v("OPTIONS")]),t._v(" 请求已经没有了，直接 "),e("code",[t._v("POST")]),t._v(" 请求响应速度杠杠的！")]),t._v(" "),e("p",[e("img",{attrs:{src:a(373),alt:"post请求成功"}})]),t._v(" "),e("p",[e("code",[t._v("END")])])])}),[],!1,null,null,null);s.default=n.exports}}]);