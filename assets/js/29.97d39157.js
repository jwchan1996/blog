(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{421:function(e,a,s){e.exports=s.p+"assets/img/01.03a53cd5.png"},507:function(e,a,s){"use strict";s.r(a);var v=s(43),t=Object(v.a)({},(function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"webpack-dev-server"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-server"}},[e._v("#")]),e._v(" webpack-dev-server")]),e._v(" "),v("blockquote",[v("p",[e._v("注意：关于 webpack-cli 4.0 及以上版本和 webpack-dev-server 之间的依赖报错问题，在 webpack 官网上面可以看到安装和配置的方式没有变动，启动的命令变了，直接使用 webpack serve 命令启动。")])]),e._v(" "),v("p",[v("img",{attrs:{src:s(421),alt:"01"}})]),e._v(" "),v("p",[e._v("一般理想的开发环境如下：")]),e._v(" "),v("ul",[v("li",[e._v("以 "),v("code",[e._v("HTTP Server")]),e._v(" 运行。项目以 "),v("code",[e._v("http")]),e._v(" 服务的方式去运行，而不是以文件的形式预览。一是更接近生产环境，二是 "),v("code",[e._v("ajax")]),e._v(" 不支持在文件 "),v("code",[e._v("file")]),e._v(" 协议中使用。")]),e._v(" "),v("li",[e._v("自动编译、自动更新。修改源代码后，"),v("code",[e._v("webpack")]),e._v(" 能够自动进行构建，浏览器及时显示最新的结果，这样能大大地减少开发中的重复操作。")]),e._v(" "),v("li",[e._v("提供 "),v("code",[e._v("Source Map")]),e._v(" 支持。代码出现错误，能够快速定位错误代码位置。")])]),e._v(" "),v("h2",{attrs:{id:"实现自动编译"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实现自动编译"}},[e._v("#")]),e._v(" 实现自动编译")]),e._v(" "),v("p",[e._v("代替人工手动输入打包命令的方式，可以使用 "),v("code",[e._v("webpack-cli")]),e._v(" 的 "),v("code",[e._v("watch")]),e._v(" 工作模式。"),v("code",[e._v("watch")]),e._v(" 模式下，"),v("code",[e._v("webpack-cli")]),e._v(" 会监听文件变化，一旦文件变换会自动重新打包。")]),e._v(" "),v("div",{staticClass:"language-bash extra-class"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[v("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" webpack --watch\n")])])]),v("h2",{attrs:{id:"自动刷新页面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#自动刷新页面"}},[e._v("#")]),e._v(" 自动刷新页面")]),e._v(" "),v("p",[e._v("下面要实现文件编译过后自动刷新浏览器，可以使用 "),v("code",[e._v("browser-sync")]),e._v(" 实现。")]),e._v(" "),v("p",[e._v("监听构建打包后的 "),v("code",[e._v("dist")]),e._v(" 文件夹下所有文件的变化：")]),e._v(" "),v("div",{staticClass:"language-bash extra-class"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[e._v("browser-sync dist --files "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"**/*"')]),e._v("\n")])])]),v("p",[v("strong",[e._v("注意")]),e._v("：以上使用 "),v("code",[e._v("webpack-cli")]),e._v("、"),v("code",[e._v("watch")]),e._v(" 实现自动构建以及使用 "),v("code",[e._v("browser-sync")]),e._v(" 实现自动刷新的方式也有弊端。一是操作上麻烦，需要同时使用两个工具；二是开发效率降低，"),v("code",[e._v("webpack")]),e._v(" 会不断的将文件写入磁盘，然后 "),v("code",[e._v("browser-sync")]),e._v(" 从磁盘读出来，一次过程需要两次磁盘读写操作。")]),e._v(" "),v("p",[e._v("还需要更高效的方案，如使用 "),v("code",[e._v("webpack-dev-server")]),e._v(" 工具。")]),e._v(" "),v("h2",{attrs:{id:"webpack-dev-server-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-server-2"}},[e._v("#")]),e._v(" Webpack Dev Server")]),e._v(" "),v("p",[v("code",[e._v("webpack-dev-server")]),e._v(" 是 "),v("code",[e._v("webpack")]),e._v(" 官方提供的开发工具，提供了开发的 "),v("code",[e._v("HTTP Server")]),e._v("，集成了 【自动编译】和【自动刷新浏览器】等功能。")]),e._v(" "),v("div",{staticClass:"language-bash extra-class"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[v("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" webpack-dev-server --dev\n")])])]),v("p",[v("a",{attrs:{href:"https://github.com/jwchan1996/webpack-play/blob/main/08-webpack-dev-server",target:"_blank",rel:"noopener noreferrer"}},[e._v("示例代码仓库"),v("OutboundLink")],1)]),e._v(" "),v("p",[e._v("运行了 "),v("code",[e._v("webpack-dev-server")]),e._v(" 命令后，它的内部会自动将项目进行打包并启动一个开发服务器，监听文件变化并同步浏览器页面，其中项目打包后的文件是放在内存当中的，而不是进行磁盘的读写，大大提高了开发的效率。")]),e._v(" "),v("blockquote",[v("p",[e._v("注意：在 webpack 5 与 webpack-cli 4 版本以上的环境下，这里运行 webpack-dev-server 命令不再是 yarn webpack-dev-server，而是 yarn webpack serve")])]),e._v(" "),v("blockquote",[v("p",[e._v("运行命令时增加 --open 参数，会自动打开浏览器页面，打开项目的预览地址了。当然，也可以通过配置文件实现。")])]),e._v(" "),v("p",[e._v("下面是配置 "),v("code",[e._v("webpack-dev-server")]),e._v(" 的一些选项，更详细的配置可自行前往官网查看。")]),e._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// webpack.config.js")]),e._v("\nmodule"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exports "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n  devServer"),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    hot"),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("  "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 开启模块热更新")]),e._v("\n    open"),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("  "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 自动打开服务浏览器运行地址")]),e._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),v("p",[e._v("其中，实际开发中会发现，修改 "),v("code",[e._v("css")]),e._v(" 样式文件能实现无刷新更新页面，而修改 "),v("code",[e._v("js")]),e._v(" 文件则会触发页面刷新，这是因为 "),v("code",[e._v("webpack")]),e._v(" 中的热更新不能开箱即用的，需要手动处理热更新逻辑。其中样式文件是通过 "),v("code",[e._v("style-loader")]),e._v(" 处理了热更新逻辑，因为修改后的样式只要覆盖之前页面的样式即可实现热更新。而 "),v("code",[e._v("js")]),e._v(" 文件的修改，"),v("code",[e._v("js")]),e._v(" 的执行方式都是没有规律的，"),v("code",[e._v("webpack")]),e._v(" 无法提供一个通用的实现热更新逻辑的 "),v("code",[e._v("Loader")]),e._v("。")]),e._v(" "),v("p",[e._v("关于 "),v("code",[e._v("webpack")]),e._v(" 热更新的相关会在往后的文章说到。")]),e._v(" "),v("h2",{attrs:{id:"webpack-dev-server-静态资源访问"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webpack-dev-server-静态资源访问"}},[e._v("#")]),e._v(" Webpack Dev Server 静态资源访问")]),e._v(" "),v("p",[v("code",[e._v("webpack-dev-server")]),e._v(" 默认会将构建结果输出的文件全部作为开发服务器的资源文件，只要是通过 "),v("code",[e._v("webpack")]),e._v(" 打包生成的文件，都可以直接访问的到。")]),e._v(" "),v("p",[e._v("如果有些静态资源文件也需要被开发服务器访问的话，就要另外地告诉 "),v("code",[e._v("webpack-dev-server")]),e._v("，配置额外的静态资源目录。增加 "),v("code",[e._v("devServer")]),e._v(" 配置，给 "),v("code",[e._v("contentBase")]),e._v(" 属性指定可以读取静态资源的目录。")]),e._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// webpack.config.js")]),e._v("\nmodule"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exports "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n  devServer"),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    contentBase"),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./public'")]),e._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),v("p",[e._v("所以为了加快打包构建速度，一般开发阶段不使用 "),v("code",[e._v("copy-webpack-plugin")]),e._v(" 静态资源拷贝插件，因为 "),v("code",[e._v("devServer")]),e._v(" 的 "),v("code",[e._v("contentBase")]),e._v(" 选项能够代替相关功能。")])])}),[],!1,null,null,null);a.default=t.exports}}]);